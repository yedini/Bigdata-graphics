### 10/11 빅데이터###

library(tidyverse)

#특이한 상황에 옵션 적용하기

diamonds
# A tibble: 53,940 x 10
carat cut       color clarity depth table price     x     y     z
<dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>
  1 0.230 Ideal     E     SI2      61.5   55.   326  3.95  3.98  2.43
2 0.210 Premium   E     SI1      59.8   61.   326  3.89  3.84  2.31
3 0.230 Good      E     VS1      56.9   65.   327  4.05  4.07  2.31
4 0.290 Premium   I     VS2      62.4   58.   334  4.20  4.23  2.63
5 0.310 Good      J     SI2      63.3   58.   335  4.34  4.35  2.75
6 0.240 Very Good J     VVS2     62.8   57.   336  3.94  3.96  2.48
7 0.240 Very Good I     VVS1     62.3   57.   336  3.95  3.98  2.47
8 0.260 Very Good H     SI1      61.9   55.   337  4.07  4.11  2.53
9 0.220 Fair      E     VS2      65.1   61.   337  3.87  3.78  2.49
10 0.230 Very Good H     VS1      59.4   61.   338  4.00  4.05  2.39
# ... with 53,930 more rows

#depth에 관한 histogram그리기 (연속형분포이므로)
ggplot(diamonds, aes(depth))+geom_histogram()
range(diamonds$depth)
[1] 43 79
#x가 중간에 몰려있으므로 xlim으로 구간 조정
ggplot(diamonds, aes(depth))+geom_histogram()+xlim(55,70)
ggplot(diamonds, aes(depth))+geom_histogram(binwidth=0.1)+xlim(55,70)
#변수 설명에서 depth=2*z/(x+y)를 label에 표현하기
ggplot(diamonds, aes(depth))+geom_histogram(binwidth=0.1)+
  xlim(55,70) + xlab(quote(paste("depth=2*", frac(z,(x+y)))))
#xlab안에서 frac함수를 인용해서 쓰겠다는 quote함수를 써줘야한다.
#frac(a,b) -> a/b로 표현해줌.

#cut별로 다른 그래프 그리기
ggplot(diamonds, aes(depth))+geom_freqpoly(aes(colour=cut), binwidth=0.1)+
  xlim(58,68) + theme(legend.position="none")
#depth에 대한 freq.poly하는데 cut별로 색을 달리한 freq.poly가 나옴, legend를 없앰.y는 count

#geom_freqpoly(aes(colour=cut), binwidth=0.1, na.rm=TRUE)
-> 이 경우 depth자료에 missing value가 있는 경우 na.rm=TRUE를 이용하여 없앰.
na.rm=TRUE를 빼면 에러 메세지 뜸.
Warning messages:
  1: Removed 669 rows containing non-finite values (stat_bin). 
2: Removed 10 rows containing missing values (geom_path). 
missing value있는지 모르고 그래프 그릴 때 이런 메세지를 확인하면 na.rm을 써야겠구나! 할 수 있다.



ggplot(diamonds, aes(depth))+geom_density(aes(colour=cut), binwidth=0.1)+
  xlim(58,68)
#freq_poly를 썼을 때 cut 종류별로 크기차이가 많이 나면 적은 수의 분포 모양을 확인하기 어려울 수 있음.
#density의 경우 각 분포의 면적이 1이므로 scale이 같아져서 더 쉽게 비교할 수 있음.
#colour 대신 fill로 바꿀 경우 분포 면적이 색칠된다.
ggplot(diamonds, aes(depth))+geom_density(aes(fill=cut), binwidth=0.1)+
  xlim(58,68)
#그러나 이 경우 겹치는 부분을 못보니까 fill을 투명하게 해주는게 나음.-> alpha 옵션 사용
ggplot(diamonds, aes(depth))+geom_density(aes(fill=cut), alpha=0.2, binwidth=0.1)+
  xlim(58,68)
#이 그래프는 fill만잡고 colour는 안잡았으므로 선은 다 검은색으로 나온다. 
#colour와 fill을 같이 사용할 경우 alpha는 fill에만 적용된다.
ggplot(diamonds, aes(depth))+geom_density(aes(fill=cut,colour=cut), alpha=0.2, binwidth=0.1)+
  xlim(58,68)

#histogram에 cut별로 색깔채우기
ggplot(diamonds, aes(depth))+geom_histogram(aes(fill=cut))+xlim(58, 68)

#position="fill" : histogram이 그냥 count를 쌓은데에 비해 
#position="fill은 y축의 범위를 0,1로 두고 각 색깔은 depth에서의 퍼센트가 됨. => conditional 분포!!
#예)depth가 62.5로 주어져 있을 때 ideal일 확률. 
ggplot(diamonds, aes(depth))+geom_histogram(aes(fill=cut), position="fill")+
  xlim(58, 68)

#position
a <- ggplot(mpg, aes(hwy, cty))+geom_point()
summary(a)
geom_point: na.rm = FALSE
stat_identity: na.rm = FALSE
position_identity 
#여기서 position_identity : 그냥 점을 찍어라..


#연속형 변수(carat)를 범주를 나눠서 boxplot 그리기 -> cut_width: 연속형을 범주형으로 자르는 변수
ggplot(diamonds, aes(carat, depth))+
  geom_boxplot(aes(group=cut_width(carat,0.1)))
#carat을 0.1씩 자른 범주형으로 만들고 그것을 그룹으로 지정하여 boxplot을 그려라.

#xlim에 NA을 넣으면 : 원래 아무옵션 안줬을 때 범위를 잡아서 그려라.
ggplot(diamonds, aes(carat, depth))+
  geom_boxplot(aes(group=cut_width(carat,0.1))) + xlim(NA, 2.05)
# 이 경우 왼쪽은 원래 그리던 대로 그렸고 오른쪽 범위만 2.05로 내가 지정해줌.

#변수별 상자그림 그릴 때 : 상자그림 자체는 비슷하게 생겼을 수 있지만 
#데이터 갯수는 완전히 다를 수도 있으므로 주의해야 한다!


#

#점이 많아질 때 -> geom_dotplot()
df <- data.frame(x=rnorm(2000), y=rnorm(2000))
norm <- ggplot(df, aes(x,y))+xlab(NULL)+ylab(NULL)
norm + geom_point()

#점이 매우 많으므로 alpha 사용해서 점의 농도 조절하기. => 제일 많이 쓰는 방법!
norm+geom_point(alpha=1/5)

#점의 모양 바꿔서 모여있는 정도를 확인.
norm+geom_point(shape=1)
#shape의 default는 shape=16(채워진 점)
norm+geom_point(shape=".")
norm+geom_point(size=0.1)

#count를 격자를 이용해 색깔로 나타내기
norm+geom_bin2d()

#bin을 더 크게 몇개 안그릴때
norm+geom_bin2d(bins=10)

#bin2d의 default는 count가 많을 수록 색이 밝아지는데, 이를 거꾸로 할때
norm+geom_bin2d()+
  scale_fill_gradient(low="white", high="black")
norm+geom_bin2d()+
  scale_fill_gradient(low="white", high="blue")

#육각형으로 그림그리기
norm+geom_hex()

#statistical summary 그래프에 표현하기
ggplot(diamonds, aes(color,price))+geom_bar(stat="summary_bin", fun.y=mean)
#bin에 대해 count말고 summary를 계산하는데 y변수에 대한 function을 mean으로 한다.

#geom_raster를 이용하여 2차원으로 summary한 값을 나타내기. mean값을 구하여 그래프로 나타낸다.
ggplot(diamonds, aes(table, depth, z=price))+
  geom_raster(binwidth=1, stat="summary_2d", fun=mean, na.rm=TRUE)+
  xlim(50,70)+ylim(50,70)
